#–∏–º–ø–æ—Ä—Ç–Ω—ã–π —Ç–µ–ª–µ–±–æ—Ç
#–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞
# —Å–ª—É—á–∞–π–Ω—ã–π –∏–º–ø–æ—Ä—Ç
 
#–æ—Ç telebot –∏–º–ø–æ—Ä—Ç–Ω—ã—Ö  —Ç–∏–ø–æ–≤
 
–±–æ—Ç = —Ç–µ–ª–µ–±–æ—Ç. TeleBot ( –∫–æ–Ω—Ñ–∏–≥ . TOKEN )
 
@ –±–æ—Ç. message_handler ( commands = [ '–Ω–∞—á–∞–ª–æ' ] )
def –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ( —Å–æ–æ–±—â–µ–Ω–∏–µ ) :
    sti =  open ( 'static / welcome.webp' ,  'rb' )
    –±–æ—Ç. send_sticker ( —Å–æ–æ–±—â–µ–Ω–∏–µ. —á–∞—Ç . id , sti )
 
    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    —Ä–∞–∑–º–µ—Ç–∫–∞ =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True )
    item1 =  —Ç–∏–ø—ã . KeyboardButton ( "üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ" )
    item2 =  —Ç–∏–ø—ã . KeyboardButton ( ¬´üòä –ö–∞–∫ –¥–µ–ª–∞?¬ª )
 
    —Ä–∞–∑–º–µ—Ç–∫–∞. –¥–æ–±–∞–≤–∏—Ç—å ( item1 , item2 )
 
    –±–æ—Ç. send_message ( message. chat . id ,  "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}! \ n –Ø - <b> {1.first_name} </b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º." . format ( message. from_user , –±–æ—Ç. get_me ( ) ) ,
        parse_mode = 'html' , reply_markup = —Ä–∞–∑–º–µ—Ç–∫–∞ )
 
@ –±–æ—Ç. message_handler ( content_types = [ '—Ç–µ–∫—Å—Ç' ] )
def lalala ( —Å–æ–æ–±—â–µ–Ω–∏–µ ) :
    –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. —á–∞—Ç . type  ==  'private' :
        –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. text  ==  'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ' :
            –±–æ—Ç. send_message ( —Å–æ–æ–±—â–µ–Ω–∏–µ. —á–∞—Ç . –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä ,  str ( —Å–ª—É—á–∞–π–Ω—ã–π . randint ( 0 , 100 ) ) )
        —Å–æ–æ–±—â–µ–Ω–∏–µ elif . text  ==  'üòä –ö–∞–∫ –¥–µ–ª–∞?' :
 
            —Ä–∞–∑–º–µ—Ç–∫–∞ =  —Ç–∏–ø—ã . InlineKeyboardMarkup ( row_width = 2 )
            item1 =  —Ç–∏–ø—ã . InlineKeyboardButton ( "–•–æ—Ä–æ—à–æ" , callback_data = '—Ö–æ—Ä–æ—à–æ' )
            item2 =  —Ç–∏–ø—ã . InlineKeyboardButton ( "–ù–µ –æ—á–µ–Ω—å" , callback_data = '–ø–ª–æ—Ö–æ' )
 
            —Ä–∞–∑–º–µ—Ç–∫–∞. –¥–æ–±–∞–≤–∏—Ç—å ( item1 , item2 )
 
            –±–æ—Ç. send_message ( —Å–æ–æ–±—â–µ–Ω–∏–µ. —á–∞—Ç . id ,  '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?' , reply_markup = —Ä–∞–∑–º–µ—Ç–∫–∞ )
        –µ—â–µ :
            –±–æ—Ç. send_message ( —Å–æ–æ–±—â–µ–Ω–∏–µ. —á–∞—Ç . id ,  '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢' )
 
@ –±–æ—Ç. callback_query_handler ( func = –ª—è–º–±–¥–∞- –≤—ã–∑–æ–≤: True )
def callback_inline ( –≤—ã–∑–æ–≤ ) :
    –ø–æ–ø—Ä–æ–±—É–π—Ç–µ :
        –µ—Å–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ. —Å–æ–æ–±—â–µ–Ω–∏–µ :
            –µ—Å–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ. data  ==  '—Ö–æ—Ä–æ—à–æ' :
                –±–æ—Ç. send_message ( –∑–≤–æ–Ω–æ–∫. —Å–æ–æ–±—â–µ–Ω–∏–µ . —á–∞—Ç . id ,  '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä' )
            elif call. data  ==  '–ø–ª–æ—Ö–æ' :
                –±–æ—Ç. send_message ( –∑–≤–æ–Ω–æ–∫. —Å–æ–æ–±—â–µ–Ω–∏–µ . —á–∞—Ç . id ,  '–ë—ã–≤–∞–µ—Ç üò¢' )
 
            # —É–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            –±–æ—Ç. edit_message_text ( chat_id = call. message . chat . id , message_id = call. message . message_id , text = "üòä –ö–∞–∫ –¥–µ–ª–∞?" ,
                reply_markup = –ù–µ—Ç )
 
            # –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
            –±–æ—Ç. answer_callback_query ( callback_query_id = call. id , show_alert = False ,
                text = "–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï !! 11" )
 
    –∫—Ä–æ–º–µ  –∏—Å–∫–ª—é—á–µ–Ω–∏—è  –∫–∞–∫ e:
        –ø–µ—á–∞—Ç—å ( repr ( e ) )
 
# –ë–ï–ñ–ê–¢–¨
–±–æ—Ç. –æ–ø—Ä–æ—Å ( none_stop = True )